<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dolen - developer Front End</title>
    <description>dolen - blog</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 23 Jan 2019 01:06:43 +0900</pubDate>
    <lastBuildDate>Wed, 23 Jan 2019 01:06:43 +0900</lastBuildDate>
    <generator>Jekyll v3.8.1</generator>
    
      <item>
        <title>ES6 - METHODS</title>
        <description>&lt;h2 id=&quot;string&quot;&gt;String&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ES6&lt;/code&gt;의 &lt;code class=&quot;highlighter-rouge&quot;&gt;String&lt;/code&gt;에는 몇 가지 메소드가 추가 되었습니다. 기존 메소드에 비해 새로운 메소드들의 실행 결과값은 의도를 쉽게 파악할 수 있도록 구현 되었습니다.&lt;/p&gt; &lt;h4 id=&quot;includes-startswith-endswith&quot;&gt;includes, startsWith, endsWith&lt;/h4&gt; &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'str'&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// ES5&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;indexOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'s'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// true&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;indexOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'r'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// true&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;indexOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'tt'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// true&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// ES6&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;startsWith&lt;/span&gt;&lt;span...</description>
        <pubDate>Mon, 21 Jan 2019 09:00:00 +0900</pubDate>
        <link>http://localhost:4000/ES6-METHODS/</link>
        <guid isPermaLink="true">http://localhost:4000/ES6-METHODS/</guid>
        
        <category>javascript</category>
        
        <category>methods</category>
        
        <category>extends</category>
        
        
      </item>
    
      <item>
        <title>ES6 - CLASS</title>
        <description>&lt;h3 id=&quot;class&quot;&gt;Class&lt;/h3&gt; &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ES6&lt;/code&gt;에서는 새로운 &lt;code class=&quot;highlighter-rouge&quot;&gt;class&lt;/code&gt;문법을 지원하여 &lt;code class=&quot;highlighter-rouge&quot;&gt;prototype&lt;/code&gt; 기반의 상속보다 간단하게 기술합니다. 그로 인해 객체를 생성하고 객체의 관계를 정의하는데에 훨씬 단순하고 명확한 문법을 제공 하게 되었습니다.&lt;/p&gt; &lt;h4 id=&quot;class-선언문&quot;&gt;Class 선언문&lt;/h4&gt; &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Class&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;method&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Class&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// function&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h4 id=&quot;class-표현식&quot;&gt;Class 표현식&lt;/h4&gt; &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Class&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Class&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// function&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;class&lt;/code&gt;는 함수의 일종으로 분류 되어 집니다. 자바스크립트에서의 함수는 1급객체로서 선언문으로표현하거나 표현식으로 표시할 수 있듯이 클래스 또한 선언문과...</description>
        <pubDate>Mon, 07 Jan 2019 09:00:00 +0900</pubDate>
        <link>http://localhost:4000/ES6-CLASS-METHOD/</link>
        <guid isPermaLink="true">http://localhost:4000/ES6-CLASS-METHOD/</guid>
        
        <category>javascript</category>
        
        <category>classes</category>
        
        <category>extends</category>
        
        
      </item>
    
      <item>
        <title>ES6 - PARAMETERS</title>
        <description>&lt;h3 id=&quot;default-parameter&quot;&gt;Default Parameter&lt;/h3&gt; &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ES6&lt;/code&gt;이전에는 위에 기술해놓은 3가지 방법등으로 파라미터에 값이 없는경우 기본값을 할당 했었습니다. 그러나 이렇게 기본값을 할당하는 경우, 전달된 인자의 값이 &lt;code class=&quot;highlighter-rouge&quot;&gt;falsy&lt;/code&gt;인 경우에는 문제가 되곤 했었죠.&lt;/p&gt; &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span...</description>
        <pubDate>Fri, 14 Dec 2018 09:00:00 +0900</pubDate>
        <link>http://localhost:4000/ES6-PARAMETERS/</link>
        <guid isPermaLink="true">http://localhost:4000/ES6-PARAMETERS/</guid>
        
        <category>javascript</category>
        
        <category>rest</category>
        
        <category>default value</category>
        
        
      </item>
    
      <item>
        <title>ES6 - ITERABLE ITERATOR</title>
        <description>&lt;h3 id=&quot;duck-typing&quot;&gt;Duck Typing&lt;/h3&gt; &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Integer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;사람은 손가락이 10개이기 때문에 주로 10진법에 익숙하지만, 전자 기기의 경우에는 특정한 신호(물, 바람, 힘, 전기, 방향등)를 받아들여 &lt;code class=&quot;highlighter-rouge&quot;&gt;on&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;off&lt;/code&gt;만으로 구분해야 하기에 0과 1로만 이루어지는 수 체계인 &lt;a href=&quot;https://ko.wikipedia.org/wiki/%EC%9D%B4%EC%A7%84%EB%B2%95&quot;&gt;2진법&lt;/a&gt;을 주로 사용합니다. 당연하게도 전자기기인 컴퓨터는 2진법을 사용하여 저장 장치에 값을 기록하고 사용하는데요. 이때 메모리안에 수도 없이 이어져있는 &lt;code class=&quot;highlighter-rouge&quot;&gt;bit&lt;/code&gt;공간중에 어디서부터 어디까지가 내가 만든 값일까요? 프로그래밍...</description>
        <pubDate>Wed, 28 Nov 2018 09:00:00 +0900</pubDate>
        <link>http://localhost:4000/ES6-ITERABLE-ITERATOR-FOR-OF/</link>
        <guid isPermaLink="true">http://localhost:4000/ES6-ITERABLE-ITERATOR-FOR-OF/</guid>
        
        <category>javascript</category>
        
        <category>Iterable</category>
        
        <category>Iterator</category>
        
        <category>for - of</category>
        
        
      </item>
    
      <item>
        <title>ES6 - DESTRUCTURING ASSIGNMENT</title>
        <description>&lt;p&gt;해체 할당이란 배열이나 객체의 값을 해체하여 새로운 변수에 할당하는 표현식 입니다. ES6에 추가되었으며 활용도가 가장 높은 기능 중 하나이죠. 오늘은 배열이나 객체에 담겨져있는 값들을 해체하여 새로 할당하는 방법에 대해 정리하고자 합니다.&lt;/p&gt; &lt;h3 id=&quot;1-배열의-해체-할당&quot;&gt;1. 배열의 해체 할당&lt;/h3&gt; &lt;h4 id=&quot;기본-사용-방법&quot;&gt;기본 사용 방법&lt;/h4&gt; &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;array&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;aa&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span...</description>
        <pubDate>Fri, 23 Nov 2018 09:00:00 +0900</pubDate>
        <link>http://localhost:4000/ES6-DESTRUCTURING_ASSIGNMENT/</link>
        <guid isPermaLink="true">http://localhost:4000/ES6-DESTRUCTURING_ASSIGNMENT/</guid>
        
        <category>javascript</category>
        
        <category>destructuring assignment</category>
        
        
      </item>
    
      <item>
        <title>ES6 - ARROW FUNCTION</title>
        <description>&lt;h3 id=&quot;1-the-arrow-function&quot;&gt;1. The Arrow Function&lt;/h3&gt; &lt;p&gt;화살표 함수라 부르는 ES6에 도입된 이 문법은 여러가지 기능 및 장점을 가지고 있습니다. 일반 &lt;code class=&quot;highlighter-rouge&quot;&gt;function&lt;/code&gt;표현식에 비하여 표현 구문이 짧고 간결할 뿐 아니라, &lt;code class=&quot;highlighter-rouge&quot;&gt;this, arguments, super&lt;/code&gt;등을 허용 하지 않기도 합니다. 화살표 함수는 항상 익명함수이며 메소드가 아닌 일반 함수 표현에 유용하게 사용할 수 있습니다.&lt;/p&gt; &lt;h3 id=&quot;2-syntax&quot;&gt;2. Syntax&lt;/h3&gt; &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// 표현식 (param1, param2, ... paramN) =&amp;gt; {statements}&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 일반 함수 표현식&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arrow&lt;/span&gt; &lt;span...</description>
        <pubDate>Sat, 17 Nov 2018 11:00:00 +0900</pubDate>
        <link>http://localhost:4000/ES6-ARROW_FUNCTION/</link>
        <guid isPermaLink="true">http://localhost:4000/ES6-ARROW_FUNCTION/</guid>
        
        <category>javascript</category>
        
        <category>arrow function</category>
        
        
      </item>
    
      <item>
        <title>ES6 - TEMPLATE LITERAL</title>
        <description>&lt;h3 id=&quot;1-string-객체를-생성&quot;&gt;1. String 객체를 생성&lt;/h3&gt; &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;str1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'string'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;str2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;string&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;JavaScript&lt;/code&gt;에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;String&lt;/code&gt;은 원시타입&lt;code class=&quot;highlighter-rouge&quot;&gt;primitiv&lt;/code&gt; 입니다. 그 자체로 값인 것이죠. 물론 전역 객체로서 &lt;code class=&quot;highlighter-rouge&quot;&gt;String&lt;/code&gt; 또한 존재하기 때문에 &lt;code class=&quot;highlighter-rouge&quot;&gt;new&lt;/code&gt;연산자를 사용하여 객체 형태로 생성되도록 할 수도 있습니다. 이렇게 사용할 경우 객체가 매번 생성되어지기 때문에 추천하지 않는 방법이죠.&lt;/p&gt; &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;str1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;str2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// false&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;뿐만 아니라 서로 객체의 주소값을 비교하기때문에 비교...</description>
        <pubDate>Fri, 09 Nov 2018 11:00:00 +0900</pubDate>
        <link>http://localhost:4000/ES6-TEMPLATE-LITERAL/</link>
        <guid isPermaLink="true">http://localhost:4000/ES6-TEMPLATE-LITERAL/</guid>
        
        <category>javascript</category>
        
        <category>template literal</category>
        
        
      </item>
    
      <item>
        <title>ES6 - INTRODUCE, LET, CONST</title>
        <description>&lt;h3 id=&quot;1-ecmascript&quot;&gt;1. ECMAScript&lt;/h3&gt; &lt;p&gt;&lt;strong&gt;ECMA&lt;/strong&gt;란 European Computer Manufactures Association에서 출발하여 &lt;strong&gt;1994&lt;/strong&gt;년에 정보 통신 기술 표준 연구회의 의미로서 변경된 기관명 입니다. 그 결과 더이상 ECMA는 단어의 앞글자를 따서 만들어진 글자가 아닌 그 자체로의 의미를 가지게 됩니다. 이 협회는 다양한 언어나 규격에 대한 표준을 정의하게 되는데 그 중 하나가 ECMA-262 입니다.&lt;/p&gt; &lt;table&gt; &lt;thead&gt; &lt;tr&gt; &lt;th style=&quot;text-align: center&quot;&gt;판&lt;/th&gt; &lt;th style=&quot;text-align: center&quot;&gt;출판일&lt;/th&gt; &lt;th style=&quot;text-align: left&quot;&gt;특징&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt; &lt;td style=&quot;text-align: center&quot;&gt;1997년 6월&lt;/td&gt; &lt;td style=&quot;text-align: left&quot;&gt;초판&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt; &lt;td style=&quot;text-align: center&quot;&gt;1998년 6월&lt;/td&gt; &lt;td style=&quot;text-align: left&quot;&gt;ISO/IEC 16262 국제 표준과 완전히 동일한 규격을 적용&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td style=&quot;text-align: center&quot;&gt;3&lt;/td&gt; &lt;td style=&quot;text-align:...</description>
        <pubDate>Sat, 03 Nov 2018 20:00:00 +0900</pubDate>
        <link>http://localhost:4000/ES6-LET-CONST-TDZ/</link>
        <guid isPermaLink="true">http://localhost:4000/ES6-LET-CONST-TDZ/</guid>
        
        <category>javascript</category>
        
        <category>ES6 Introduce</category>
        
        <category>TDZ</category>
        
        <category>let</category>
        
        <category>const</category>
        
        
      </item>
    
      <item>
        <title>CSS Panorama Viewer</title>
        <description>&lt;p&gt;금주에 정리 예정&lt;/p&gt;

&lt;iframe width=&quot;1024&quot; height=&quot;800&quot; src=&quot;/project/codespitz/css/panorama.html&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
</description>
        <pubDate>Fri, 11 May 2018 05:00:00 +0900</pubDate>
        <link>http://localhost:4000/panorama-viewer/</link>
        <guid isPermaLink="true">http://localhost:4000/panorama-viewer/</guid>
        
        <category>CSS</category>
        
        <category>POSITION</category>
        
        <category>TRANSFORM</category>
        
        <category>PERSPECTIVE</category>
        
        <category>ANIMATION</category>
        
        
      </item>
    
      <item>
        <title>CSS position, box-model</title>
        <description>&lt;p&gt;금주에 정리 예정&lt;/p&gt;

&lt;iframe width=&quot;1024&quot; height=&quot;600&quot; src=&quot;/project/codespitz/css/box-model-and-position.html&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
</description>
        <pubDate>Fri, 11 May 2018 05:00:00 +0900</pubDate>
        <link>http://localhost:4000/box-model-and-position/</link>
        <guid isPermaLink="true">http://localhost:4000/box-model-and-position/</guid>
        
        <category>CSS</category>
        
        <category>POSITION</category>
        
        <category>BOX-MODEL</category>
        
        
      </item>
    
      <item>
        <title>자바스크립트 숫자 표현 방식</title>
        <description>&lt;h3 id=&quot;1-ieee-754&quot;&gt;1. IEEE-754&lt;/h3&gt; &lt;p&gt;자바스크립트는 &lt;strong&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/IEEE_754&quot;&gt;IEEE-754&lt;/a&gt;&lt;/strong&gt;에 의거하여 정수와 부동소수점을 표기합니다.&lt;br /&gt; IEEE-754 표기법 중 32BIT를 사용하는 단정도와 64BIT를 사용하는 배정도방식이 존재하는데&lt;br /&gt; 자바스크립트는 배정도 방식을 사용하여 정수와 부동소수점을 표기합니다.&lt;/p&gt; &lt;h3 id=&quot;2-부호-비트-signed-bit&quot;&gt;2. 부호 비트 (SIGNED BIT)&lt;/h3&gt; &lt;p&gt;자바스크립트는 배정도방식으로 저장하지만 실제로 개발자가 비트연산등을 수행하여 값을 저장할때에는 32BIT 정수로 변환하여 연산을 수행한 뒤 64BIT로 다시 변환하여 저장합니다.&lt;br /&gt; 0000 0000 0000 0000 0000 0000 0000 0000(2) 의 비트값이 존재한다고 했을때 첫 번째 비트를 부호 표현을 위한 비트로 따로 지정하게 되는데 이를 부호 비트라고 칭합니다.&lt;br /&gt; 부호비트는 0일때 양수를 1일때 음수를 나타냅니다.&lt;/p&gt; &lt;h3 id=&quot;3-양수를-표현할때&quot;&gt;3. 양수를 표현할때&lt;/h3&gt; &lt;p&gt;먼저 정수를 저장하는 방법에 대해 알아보도록 하죠. 43이라는...</description>
        <pubDate>Sat, 10 Jun 2017 11:00:00 +0900</pubDate>
        <link>http://localhost:4000/javascript-exponent-expression/</link>
        <guid isPermaLink="true">http://localhost:4000/javascript-exponent-expression/</guid>
        
        <category>javascript</category>
        
        <category>mantissa</category>
        
        <category>exponent</category>
        
        <category>base</category>
        
        
      </item>
    
      <item>
        <title>DragAndDrop</title>
        <description>&lt;iframe width=&quot;100%&quot; height=&quot;500&quot; src=&quot;/project/dragAndDrop/index.html&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
</description>
        <pubDate>Fri, 02 Jun 2017 06:00:00 +0900</pubDate>
        <link>http://localhost:4000/dragAndDrop/</link>
        <guid isPermaLink="true">http://localhost:4000/dragAndDrop/</guid>
        
        <category>memo</category>
        
        
      </item>
    
      <item>
        <title>ES6 - REFLECTION</title>
        <description>&lt;h3 id=&quot;1-reflection의-정의&quot;&gt;1. Reflection의 정의&lt;/h3&gt; &lt;p&gt;ES6의 Reflection을 알아보기 전에 먼저 자바의 Reflection의 개념에 대해서 알아보겠습니다.&lt;br /&gt; &lt;strong&gt;Reflection&lt;/strong&gt;이란 사전적으로 &lt;strong&gt;‘거울에 비친 그림자, 반사’&lt;/strong&gt;등의 의미로 사용 되는 단어 입니다.&lt;br /&gt; 조금만 생각해 보자면, Reflection은 사전적 의미를 그대로 따른다고 볼 수 있습니다.&lt;/p&gt; &lt;p&gt;Reflection은 객체의 형태를 모르고, 메모리만 알고 있더라도 그 형태를 알아낼 수 있게 해주는 프로그래밍 기법이라고 볼 수 있습니다.&lt;br /&gt; 만약 객체의 메모리만 알고 있고, 그 메모리의 주체의 형태를 모른다고 가정해 볼까요.&lt;/p&gt; &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Test&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span...</description>
        <pubDate>Fri, 13 Jan 2017 11:00:00 +0900</pubDate>
        <link>http://localhost:4000/ES6-Reflection/</link>
        <guid isPermaLink="true">http://localhost:4000/ES6-Reflection/</guid>
        
        <category>javascript</category>
        
        <category>template literal</category>
        
        
      </item>
    
      <item>
        <title>빌더 패턴.</title>
        <description>&lt;h3 id=&quot;--builder-pattern&quot;&gt;- Builder Pattern&lt;/h3&gt; &lt;p&gt;&lt;strong&gt;빌더 패턴&lt;/strong&gt;은 생성자에 들어갈 매개 변수가 많든 적든 차례차례 매개 변수를 받아들이고 모든 매개 변수를 받은 뒤에 이 변수들을 통합해서 한번에 생성하는 패턴을 말합니다.&lt;/p&gt; &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;BuildPattern&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;BuildPattern&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Builder&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;builder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;builder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;age&lt;/span&gt; &lt;span...</description>
        <pubDate>Wed, 28 Dec 2016 05:00:00 +0900</pubDate>
        <link>http://localhost:4000/javascript-build-pattern/</link>
        <guid isPermaLink="true">http://localhost:4000/javascript-build-pattern/</guid>
        
        <category>pattern</category>
        
        
      </item>
    
      <item>
        <title>JAVA 8 스트림 (Stream)</title>
        <description>&lt;h3 id=&quot;--java8-stream&quot;&gt;- JAVA8 Stream&lt;/h3&gt; &lt;p&gt;자바 &lt;strong&gt;스트림(Stream)&lt;/strong&gt;에 대해서 정리해보려 합니다.&lt;/p&gt; &lt;p&gt;스트림(Stream)은 컬렉션보다 개념적으로 높은 수준의 데이터 뷰 역할을 하며, 이를 이용하면 좀 더 직관적으로 계산을 명시할 수 있다고합니다.&lt;br /&gt; 스트림을 이용할때에는 일을 수행하는 방법이 아닌 하고싶은 일을 명시하면 되는데요, 연산을 스케줄링 하는 것은 해당 구현체에 맡기면 됩니다.&lt;br /&gt; &lt;br /&gt;&lt;/p&gt; &lt;p&gt;먼저 스트림을 시작하기 전에 스트림의 특징을 알아볼까요 ?&lt;/p&gt; &lt;ol&gt; &lt;li&gt;스트림은 요소를 저장하지 않습니다. 요소는 스트림을 지원하는 컬렉션에 저장되거나 필요한 때에 생성됩니다.&lt;/li&gt; &lt;li&gt;스트림 연산은 원본을 변경하지 않습니다. &lt;strong&gt;(Immutable)&lt;/strong&gt; 합니다.&lt;/li&gt; &lt;li&gt;스트림 연산은 가능하면 지연시켜 둡니다. 즉 연산 결과가 필요하기 전까지는 실행되지 않습니다.&lt;/li&gt; &lt;/ol&gt; &lt;h4 id=&quot;--반복에서-스트림-연산으로의-전환&quot;&gt;- 반복에서 스트림 연산으로의 전환&lt;/h4&gt; &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre...</description>
        <pubDate>Sat, 17 Dec 2016 05:00:00 +0900</pubDate>
        <link>http://localhost:4000/java-stream/</link>
        <guid isPermaLink="true">http://localhost:4000/java-stream/</guid>
        
        <category>JAVA8</category>
        
        <category>stream</category>
        
        
      </item>
    
      <item>
        <title>JAVA8 메소드 레퍼런스(Method Reference)</title>
        <description>&lt;h3 id=&quot;--java8-method-reference&quot;&gt;- JAVA8 Method Reference&lt;/h3&gt; &lt;p&gt;메소드 참조와 생성자 참조에 대해서 알아보도록 하겠습니다.&lt;br /&gt; 우리는 람다 표현식에서 알아보았듯이, 구현해야 하는 메소드의 본문을 람다 표현식으로 (익명클래스로 생성되도록 하는) 대체할 수 있다는 것을 알았습니다.&lt;br /&gt; 하지만, 이미 우리가 구현하고자 하는 람다식 자체가 구현되어있는 경우가 있습니다.&lt;br /&gt; 이럴때 사용하는 메서드 참조용 특수 문법이 있는데, 이 방식을 메소드 참조라고 표현합니다. &lt;br /&gt; &lt;br /&gt;&lt;/p&gt; &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;strings&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;6&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;5&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;4&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;3&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;2&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;1&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;};&lt;/span&gt; &lt;span...</description>
        <pubDate>Sat, 10 Dec 2016 05:00:00 +0900</pubDate>
        <link>http://localhost:4000/java-method-reference/</link>
        <guid isPermaLink="true">http://localhost:4000/java-method-reference/</guid>
        
        <category>JAVA8</category>
        
        <category>method reference</category>
        
        
      </item>
    
      <item>
        <title>JAVA8 람다 표현식(Lambda Expression)</title>
        <description>&lt;h3 id=&quot;--람다-표현식에-관하여&quot;&gt;- 람다 표현식에 관하여&lt;/h3&gt; &lt;p&gt;자바8에 들어오면서 함수형 표현식 (Lambda Expression)이 도입되었습니다.&lt;br /&gt; 물론 Javascript 진영 또한 ES6에 접어들면서 마찬가지로 람다 표현식을 도입하였지요.&lt;br /&gt; 오늘은 자바의 람다식에 대해서 알아보겠습니다.&lt;/p&gt; &lt;h4 id=&quot;--interface&quot;&gt;- interface&lt;/h4&gt; &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@FunctionalInterface&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;myFunction&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;ul&gt; &lt;li&gt;@FunctionalInterface가 정의되어있어야 합니다.&lt;/li&gt; &lt;li&gt;정의해 둔 인터페이스에 추상메소드는 1개여야만 합니다.&lt;/li&gt; &lt;li&gt;default 메소드와 static 메소드는 무시합니다.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&quot;--활용-방법&quot;&gt;- 활용 방법&lt;/h4&gt; &lt;p&gt;람다 표현식은 함수 표현식이기 때문에 불필요한 부분을 제거할 수 있게 됩니다.&lt;br /&gt; 정말 많이 작성 하였었던 Thread를 오랜만에 생성해 보겠습니다.&lt;br /&gt; 조금 기본적인 코드를 만들어 볼까요...</description>
        <pubDate>Sat, 10 Dec 2016 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/java-lambda/</link>
        <guid isPermaLink="true">http://localhost:4000/java-lambda/</guid>
        
        <category>람다표현식</category>
        
        <category>Lambda Expression</category>
        
        
      </item>
    
      <item>
        <title>JAVA 8 Interface</title>
        <description>&lt;h3 id=&quot;--java8-interface에-관하여&quot;&gt;- JAVA8 Interface에 관하여&lt;/h3&gt; &lt;p&gt;자바8 에 접어들면서 가장 크게 변한 부분이 바로 interface가 아닐까 싶습니다.&lt;br /&gt; 오늘은 어떤식으로 interface가 변경되었고 또 어떤식으로 응용이 가능한지에 대해 정리해보았습니다.&lt;/p&gt; &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;myInterface&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;자바 8 이전의 interface의 역할은 다중 상속을 지원하고, 표준 규격을 강제하며, 확장성과 유지보수성을 높이고 다형성을 지원하기 위해서 사용되었습니다.&lt;br /&gt; 따라서 interface에는 메소드의 정의를 해놓은 추상메소드만이 존재할 수 있었습니다. 또한 변수를 선언할 수 있었지만, 권고하지 않았지요.&lt;br /&gt; &lt;strong&gt;자바8의 인터페이스&lt;/strong&gt;는 어떻게 변경 되었는지 알아볼까요.&lt;/p&gt; &lt;h4 id=&quot;--인터페이스의-변수선언-및-메소드-구현&quot;&gt;- 인터페이스의 변수선언 및 메소드 구현&lt;/h4&gt; &lt;div...</description>
        <pubDate>Sat, 10 Dec 2016 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/java-interface/</link>
        <guid isPermaLink="true">http://localhost:4000/java-interface/</guid>
        
        <category>JAVA8</category>
        
        <category>Interface</category>
        
        
      </item>
    
      <item>
        <title>HTML5 FileUpload 정리</title>
        <description>&lt;iframe width=&quot;1024&quot; height=&quot;600&quot; src=&quot;/project/html/file/index.html&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
</description>
        <pubDate>Mon, 28 Nov 2016 06:00:00 +0900</pubDate>
        <link>http://localhost:4000/file-upload/</link>
        <guid isPermaLink="true">http://localhost:4000/file-upload/</guid>
        
        <category>HTML5</category>
        
        <category>FILE UPLOAD</category>
        
        
      </item>
    
      <item>
        <title>HTML5 CANVAS TETRIS</title>
        <description>&lt;style&gt;
    button {
        width: 100px;
        height: 30px;
        color: white;
        font-size: 12px;
        font-weight: bold;
    }
    
    .lock {
        background-color: red;    
    }
    
    .unlock {
        background-color: blue;    
    }
&lt;/style&gt;

&lt;p&gt;&lt;button class=&quot;scroll-btn lock&quot;&gt;스크롤 잠그기&lt;/button&gt;
&lt;button class=&quot;scroll-btn unlock&quot;&gt;스크롤 해제&lt;/button&gt;&lt;/p&gt;
&lt;iframe width=&quot;1024&quot; height=&quot;730&quot; style=&quot;margin-top: -32px&quot; src=&quot;/project/html/canvas/tetris/index.html&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;script&gt;
    var buttons = document.querySelectorAll('.scroll-btn')
    buttons[0].addEventListener('click', function () {
        document.body.style.overflow = 'hidden';
    })
    
    buttons[1].addEventListener('click', function () {
        document.body.style.overflow = '';
    })
    
    
    
&lt;/script&gt;

</description>
        <pubDate>Mon, 28 Nov 2016 05:00:00 +0900</pubDate>
        <link>http://localhost:4000/canvas-tetris/</link>
        <guid isPermaLink="true">http://localhost:4000/canvas-tetris/</guid>
        
        <category>tetris</category>
        
        <category>canvas</category>
        
        
      </item>
    
      <item>
        <title>CSS 라이언</title>
        <description>&lt;iframe width=&quot;1024&quot; height=&quot;600&quot; src=&quot;/project/html/lion/index.html&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
</description>
        <pubDate>Fri, 18 Nov 2016 06:00:00 +0900</pubDate>
        <link>http://localhost:4000/lion/</link>
        <guid isPermaLink="true">http://localhost:4000/lion/</guid>
        
        <category>CSS</category>
        
        <category>LION</category>
        
        
      </item>
    
      <item>
        <title>MONGODB를 쉽게 사용하게 해주는 DEPLOYD</title>
        <description>&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;http://deployd.com&quot;&gt;DEPLOYD 사이트&lt;/a&gt;&lt;/strong&gt; &lt;strong&gt;&lt;a href=&quot;http://docs.deployd.com/docs/&quot;&gt;DEPLOYD DOCUMENT&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;deployd 에 접속하여 보면 간단한 소개 동영상과 함께 document등이 있으니 참고하길 바랍니다.&lt;br /&gt; 먼저 deployd는 mongodb를 사용하여 동작하므로 mongodb를 설치해볼까요 ?&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://docs.mongodb.com/manual/tutorial/install-mongodb-on-windows/&quot;&gt;MONGODB WINDOW&lt;/a&gt;&lt;/strong&gt; &lt;strong&gt;&lt;a href=&quot;https://docs.mongodb.com/manual/tutorial/install-mongodb-on-os-x/&quot;&gt;MONGODB MAC OS&lt;/a&gt;&lt;/strong&gt; &lt;strong&gt;&lt;a href=&quot;https://docs.mongodb.com/manual/administration/install-on-linux/&quot;&gt;MONGODB LINUX&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;저의 경우에는 MAC 을 사용하니 MAC 설치방법에 대해서 볼까요 ?&lt;/p&gt; &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-cli&quot;&gt;brew update brew install mongodb &lt;/code&gt;&lt;/pre&gt; &lt;blockquote&gt; &lt;p&gt;MAC OS의 경우에는 이것으로 끝 입니다. &lt;br /&gt; WINDOW의 경우에는 별도의 환경변수를 설정해주시면 됩니다. &lt;br /&gt; 그다음에는 deployd를 설치해주어야 하는데요. &lt;br /&gt; deployd는 npm 으로 설치가능합니다.&lt;/p&gt; &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-cli&quot;&gt;npm install deployd -g &lt;/code&gt;&lt;/pre&gt; &lt;blockquote&gt; &lt;p&gt;설치가 성공적으로 완료가 되었으면 이제 실행해볼 차례...</description>
        <pubDate>Sun, 13 Nov 2016 05:00:00 +0900</pubDate>
        <link>http://localhost:4000/deployd-setting/</link>
        <guid isPermaLink="true">http://localhost:4000/deployd-setting/</guid>
        
        <category>deployd</category>
        
        <category>mongodb</category>
        
        
      </item>
    
      <item>
        <title>ES6 - SYMBOL</title>
        <description>&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Symbol&quot;&gt;SYMBOL API&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;h4 id=&quot;1-7번째-원시-데이터-타입-type&quot;&gt;1. 7번째 원시 데이터 타입 (TYPE)&lt;/h4&gt; &lt;blockquote&gt; &lt;p&gt;Undefined&lt;br /&gt; Boolean&lt;br /&gt; Number&lt;br /&gt; String&lt;br /&gt; Object&lt;br /&gt; NULL&lt;/p&gt; &lt;/blockquote&gt; &lt;blockquote&gt; &lt;p&gt;Symbol 이 추가 되었습니다.&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/ko/docs/Web/JavaScript/Data_structures&quot;&gt;JS 원시 데이터 타입&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;symbol1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Symbol&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Apple'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;symbol1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//symbol&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{});&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//object&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//object&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//string&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt; &lt;span...</description>
        <pubDate>Tue, 08 Nov 2016 05:00:00 +0900</pubDate>
        <link>http://localhost:4000/ES6-SYMBOL/</link>
        <guid isPermaLink="true">http://localhost:4000/ES6-SYMBOL/</guid>
        
        <category>javascript</category>
        
        <category>symbol</category>
        
        
      </item>
    
      <item>
        <title>HTML5 CANVAS TEXT</title>
        <description>&lt;iframe width=&quot;1024&quot; height=&quot;850&quot; src=&quot;/project/html/canvas/text/index.html&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
</description>
        <pubDate>Mon, 07 Nov 2016 08:00:00 +0900</pubDate>
        <link>http://localhost:4000/canvas-text/</link>
        <guid isPermaLink="true">http://localhost:4000/canvas-text/</guid>
        
        <category>text</category>
        
        <category>canvas</category>
        
        
      </item>
    
      <item>
        <title>HTML5 CANVAS DRAW</title>
        <description>&lt;iframe width=&quot;1024&quot; height=&quot;2400&quot; src=&quot;/project/html/canvas/draw/index.html&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
</description>
        <pubDate>Mon, 07 Nov 2016 07:00:00 +0900</pubDate>
        <link>http://localhost:4000/canvas-draw/</link>
        <guid isPermaLink="true">http://localhost:4000/canvas-draw/</guid>
        
        <category>draw</category>
        
        <category>canvas</category>
        
        
      </item>
    
      <item>
        <title>HTML5 CANVAS CROSS LINE</title>
        <description>&lt;iframe width=&quot;1024&quot; height=&quot;700&quot; src=&quot;/project/html/canvas/cross-line/index.html&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
</description>
        <pubDate>Mon, 07 Nov 2016 07:00:00 +0900</pubDate>
        <link>http://localhost:4000/canvas-cross-line/</link>
        <guid isPermaLink="true">http://localhost:4000/canvas-cross-line/</guid>
        
        <category>cross line</category>
        
        <category>canvas</category>
        
        
      </item>
    
      <item>
        <title>HTML5 CANVAS CLOCK</title>
        <description>&lt;iframe width=&quot;1024&quot; height=&quot;500&quot; src=&quot;/project/html/canvas/clock/index.html&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;iframe width=&quot;1024&quot; height=&quot;700&quot; src=&quot;/project/html/canvas/clockAnimation/index.html&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
</description>
        <pubDate>Mon, 07 Nov 2016 06:00:00 +0900</pubDate>
        <link>http://localhost:4000/canvas-clock/</link>
        <guid isPermaLink="true">http://localhost:4000/canvas-clock/</guid>
        
        <category>clock</category>
        
        <category>canvas</category>
        
        
      </item>
    
      <item>
        <title>Algorithm - Shell Sort</title>
        <description>&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://visualgo.net/sorting&quot;&gt;Shell Sort View&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Arr&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_list&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;61&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;85&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;19&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;88&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;68&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;70&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;29&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//this._list = new Array(100).fill(0).map(v =&amp;gt; Math.floor(Math.random() * 100) + 1);&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_gaps&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;shellSort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;len&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;loopCount&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span...</description>
        <pubDate>Mon, 07 Nov 2016 05:00:00 +0900</pubDate>
        <link>http://localhost:4000/sort-shell/</link>
        <guid isPermaLink="true">http://localhost:4000/sort-shell/</guid>
        
        <category>algorithm</category>
        
        <category>sort</category>
        
        
      </item>
    
      <item>
        <title>Algorithm - Select Sort</title>
        <description>&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://visualgo.net/sorting&quot;&gt;Select Sort View&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Arr&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_list&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fill&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;floor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;selectSort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;len&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cnt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;loopCount&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;timer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span...</description>
        <pubDate>Mon, 07 Nov 2016 05:00:00 +0900</pubDate>
        <link>http://localhost:4000/sort-select/</link>
        <guid isPermaLink="true">http://localhost:4000/sort-select/</guid>
        
        <category>algorithm</category>
        
        <category>sort</category>
        
        
      </item>
    
      <item>
        <title>Algorithm - Search Sort</title>
        <description>&lt;h4 id=&quot;순차-검색&quot;&gt;순차 검색&lt;/h4&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Search&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;list&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fill&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;round&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;seqSearch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span...</description>
        <pubDate>Mon, 07 Nov 2016 05:00:00 +0900</pubDate>
        <link>http://localhost:4000/sort-search/</link>
        <guid isPermaLink="true">http://localhost:4000/sort-search/</guid>
        
        <category>algorithm</category>
        
        <category>sort</category>
        
        
      </item>
    
  </channel>
</rss>
